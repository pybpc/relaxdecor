.\" Man page generated from reStructuredText.
.
.TH RELAXEDECOR 1 "April 03, 2021" "v0.0.0.dev0" ""
.SH NAME
relaxedecor \- back-port compiler for Python 3.9 relaxed decorator expressions
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
relaxedecor [\fIoptions\fP] <\fIPython source files and directories...\fP>
.SH DESCRIPTION
.sp
Since PEP 614, Python introduced \fIrelaxed decorator expressions\fP syntax in
version __3.9__. For those who wish to use \fIrelaxed decorator expressions\fP
in their code, \fBrelaxedecor\fP provides an intelligent, yet imperfect,
solution of a \fBbackport compiler\fP by replacing \fIrelaxed decorator expressions\fP
syntax with old\-fashioned syntax, which guarantees you to always write
\fIrelaxed decorator expressions\fP in Python 3.9 flavour then compile for
compatibility later.
.sp
This man page mainly introduces the CLI options of the \fBrelaxedecor\fP program.
You can also checkout the online documentation at
\fI\%https://bpc\-relaxedecor.readthedocs.io/\fP for more details.
.SH OPTIONS
.SS positional arguments
.INDENT 0.0
.TP
.B SOURCE
Python source files and directories to be converted
.UNINDENT
.SS optional arguments
.INDENT 0.0
.TP
.B \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.B \-V\fP,\fB  \-\-version
show program\(aqs version number and exit
.TP
.B \-q\fP,\fB  \-\-quiet
run in quiet mode
.UNINDENT
.INDENT 0.0
.TP
.B \-C \fIN\fP, \-\-concurrency \fIN\fP
the number of concurrent processes for conversion
.UNINDENT
.INDENT 0.0
.TP
.B \-\-dry\-run
list the files to be converted without actually performing conversion and archiving
.UNINDENT
.INDENT 0.0
.TP
.B \-s \fI[FILE]\fP, \-\-simple \fI[FILE]\fP
this option tells the program to operate in "simple mode"; if a file name is provided, the program will convert
the file but print conversion result to standard output instead of overwriting the file; if no file names are
provided, read code for conversion from standard input and print conversion result to standard output; in
"simple mode", no file names shall be provided via positional arguments
.UNINDENT
.SS archive options
.sp
backup original files in case there\(aqre any issues
.INDENT 0.0
.TP
.BI \-n\fB a\fR,\fB \ \-\-no\-archive
do not archive original files
.UNINDENT
.INDENT 0.0
.TP
.B \-k \fIPATH\fP, \-\-archive\-path \fIPATH\fP
path to archive original files
.TP
.B \-r \fIARCHIVE_FILE\fP, \-\-recover \fIARCHIVE_FILE\fP
recover files from a given archive file
.UNINDENT
.sp
\-r2                     remove the archive file after recovery
\-r3                     remove the archive file after recovery, and remove the archive directory if it becomes empty
.SS convert options
.sp
conversion configuration
.INDENT 0.0
.TP
.B \-vs \fIVERSION\fP, \-\-vf \fIVERSION\fP, \-\-source\-version \fIVERSION\fP, \-\-from\-version \fIVERSION\fP
parse source code as this Python version
.TP
.B \-l \fILINESEP\fP, \-\-linesep \fILINESEP\fP
line separator (\fBLF\fP, \fBCRLF\fP, \fBCR\fP) to read source files
.TP
.B \-t \fIINDENT\fP, \-\-indentation \fIINDENT\fP
code indentation style, specify an integer for the number of spaces, or \fB\(aqt\(aq\fP/\fB\(aqtab\(aq\fP for tabs
.UNINDENT
.sp
\-n8, \-\-no\-pep8          do not make code insertion \fBPEP 8\fP compliant
.SH ENVIRONMENT
.sp
\fBrelaxedecor\fP currently supports these environment variables:
.INDENT 0.0
.TP
.B RELAXEDECOR_QUIET
run in quiet mode
.TP
.B RELAXEDECOR_CONCURRENCY
the number of concurrent processes for conversion
.TP
.B RELAXEDECOR_DO_ARCHIVE
whether to perform archiving
.TP
.B RELAXEDECOR_ARCHIVE_PATH
path to archive original files
.TP
.B RELAXEDECOR_SOURCE_VERSION
parse source code as this Python version
.TP
.B RELAXEDECOR_LINESEP
line separator to read source files
.TP
.B RELAXEDECOR_INDENTATION
code indentation style
.TP
.B RELAXEDECOR_PEP8
whether to make code insertion \fBPEP 8\fP compliant
.UNINDENT
.SH SEE ALSO
.sp
pybpc(1), f2format(1), poseur(1), vermin(1)
.SH AUTHOR
Contributors of the Python Backport Compiler project.
See https://github.com/pybpc
.SH COPYRIGHT
relaxedecor is licensed under the MIT License.
.\" Generated by docutils manpage writer.
.
